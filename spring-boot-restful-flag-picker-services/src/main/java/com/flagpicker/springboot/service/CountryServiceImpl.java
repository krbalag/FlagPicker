package com.flagpicker.springboot.service;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.atomic.AtomicLong;

import org.springframework.stereotype.Service;

import com.flagpicker.springboot.model.Country;



@Service("countryService")
public class CountryServiceImpl implements CountryService{
	
	private static final AtomicLong counter = new AtomicLong();
	
	private static List<Country> countries;
	
	static{
		makeDummyData();
	}

	public List<Country> findAllCountries() {
		return countries;
	}
	
	public String findByFlag(String name) {
		for(Country country : countries){
			
			if(country.getName().equalsIgnoreCase(name)){
				System.out.println("in findbyflag"+country.getFlag());
				return country.getFlag();
			}
		}
		return null;
	}
	
	public Country  findByName(String name) {
		for(Country country : countries){
			if(country.getName().equalsIgnoreCase(name)){
				return country;
			}
		}
		return null;
	}
	
	public void saveCountry(Country country) {
		country.setFlag("ğŸ‡ºğŸ‡¸");
		countries.add(country);
	}




	public boolean isCountryExist(Country country) {
		return findByName(country.getName())!=null;
	}
	
	public void deleteAllCountries(){
		countries.clear();
	}

	private static void makeDummyData(){
		List<Country> countryList = new ArrayList<Country>();
		countryList.add(new Country(1,"ğŸ‡³ğŸ‡¬","Nigeria"));
		countryList.add(new Country(1,"ğŸ‡ªğŸ‡¹","Ethiopia"));
		countryList.add(new Country(1,"ğŸ‡ªğŸ‡¬","Egypt"));
		countryList.add(new Country(1,"ğŸ‡³ğŸ‡¨","DR Congo"));
		countryList.add(new Country(1,"ğŸ‡¿ğŸ‡¦","South Africa"));
		
		countryList.add(new Country(2,"ğŸ‡ºğŸ‡¸","USA"));
		countryList.add(new Country(2,"ğŸ‡§ğŸ‡·","Brazil"));
		countryList.add(new Country(2,"ğŸ‡²ğŸ‡½","Mexico"));
		countryList.add(new Country(2,"ğŸ‡¨ğŸ‡´","Colombia"));
		countryList.add(new Country(2,"ğŸ‡¦ğŸ‡·","Argentina"));
		
		countryList.add(new Country(3,"ğŸ‡¨ğŸ‡³","China"));
		countryList.add(new Country(3,"ğŸ‡®ğŸ‡³","India"));
		countryList.add(new Country(3,"ğŸ‡®ğŸ‡©","Indonesia"));
		countryList.add(new Country(3,"ğŸ‡µğŸ‡°","Pakistan"));
		countryList.add(new Country(3,"ğŸ‡§ğŸ‡©","Bangladesh"));
		
		countryList.add(new Country(4,"ğŸ‡·ğŸ‡º","Russia"));
		countryList.add(new Country(4,"ğŸ‡©ğŸ‡ª","Germany"));
		countryList.add(new Country(4,"ğŸ‡¬ğŸ‡§","UK"));
		countryList.add(new Country(4,"ğŸ‡¬ğŸ‡§","France"));
		countryList.add(new Country(4,"ğŸ‡®ğŸ‡¹","Italy"));
		
		countryList.add(new Country(5,"ğŸ‡¦ğŸ‡º","Australia"));
		countryList.add(new Country(5,"ğŸ‡µğŸ‡¬","Papua New Guinea"));
		countryList.add(new Country(5,"ğŸ‡³ğŸ‡¿","New Zealand"));
		countryList.add(new Country(5,"ğŸ‡«ğŸ‡¯","Fiji"));
		countryList.add(new Country(5,"ğŸ‡¸ğŸ‡§","Solomon Islands"));
		
		countries = countryList;
	}

}
